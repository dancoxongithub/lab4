Admin logging in:
After putting in the credentials (admin@products.ie | password) and hitting 
the login button on the page it redirects to the loginSubmit method which checks
the form that was submitted for errors. If the form has errors is redirects the user
back to the login page. If it has no errors it checks if the role of the logged in user
is an admin. If it is it redirects them to the AdminController products page (Which includes update/delete buttons)
if they are not an admin it redirects them to the usual HomeController index page. 

Editing/Adding a Product:
On the AdminController adminProducts.scala.html page mulitple buttons are available to the admin.
Edit existing product(red glyhicon with pencil), delete an existing product (red glyphicon with bin)
and Add a product (Blue bootstrap button). If the edit existing product button is clicked next to a certain 
product it runs the updateProduct method passing in the id of the product as the argument for the method. 
The updateProduct method creates a form with the details of the product and renders that form in 
the addProduct page allowing the user to edit the current information about the product and save it 
back to the database. It uses the fact that the form is not blank when passing it to the addproduct 
page to make it look like it is an update product page instead of the usual addproduct page, but really
it is just using if statements to chage the text around the add product page. 
If the admin instead clicks the Add a Product button it passes a blank form to the addProduct page 
allowing the user to enter in details of the new product. 

Deleting a Product:
If the admin hits the delete button next to a product the deleteProduct method is run which 
passes in the id of the product as an argument. This method then deletes the product from the 
database and returns the admin back to the page with a message saying it was successfully delete.